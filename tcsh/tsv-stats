#!/bin/tcsh -f -X -V

# little script to make sense of tsv files by awking sorting counting
# 
# NB:
# 1. assumes tsv
# 2. you must be in the directory with the input (.tsv) file
#
# example usage:
# % cd dat
# % source $foodir/tsv-stats bar.tsv outputdir
# 
# (c) chris.wiggins@gmail.com 2013
 
set infile=$1
set outdir=$2
set nrows=`wc -l $infile|awk '{print $1}'`
set ncols=`head -1 $infile | awk -F'\t' '{print NF}'`
set outfile=/tmp/awksorts_$$.sh
set report={$infile}-summary.txt

if ($#argv < 2) then
  echo ++ fail: missing output directory, please supply 2 arguments to tsv-stats
else
  if ( -e $outdir ) then
    echo ++ warning: output directory $outdir already exists
  else
    mkdir -p $outdir
  endif

 # do not change! or change the hard-set line in the awk if you do
 set auxdir=/tmp/tsv-stats-tempdir
 
 rm -rf $outfile $auxdir
 mkdir -p $auxdir

 yes \
   | head -$ncols \
   | awk '{print NR}' \
   | awk '{print "cat fnord | awk -F'"'"'\\t'"'"' '"'"'{print $"NR"}'"'"' | sort -bfd | uniq -c | sort -nr > /tmp/tsv-stats-tempdir/fnord-"NR"-stats.asc"}' \
   | sed s/fnord/$infile/g \
  > $outfile

  #wc -l $outfile

  echo "++ starting awk-sort-uniq-sort over "$nrows" rows of "$ncols" cols at "`date`
  source $outfile
  echo "++ ending awk-sort-uniq-sort at "`date`
  #rm $outfile

  # POSTPROCESSING:
  echo "++ report (saved in "$report"): "
  cd $auxdir
  rm -rf $report
  touch $report
  foreach columnfile ( `awk '{print $NF}' < $outfile | sed -e 's/.*\///'` )
    echo `wc -l $columnfile` | awk '{printf $2":\t"$1" values;"}' >> $report
    echo `head -1 $columnfile` | awk '{printf "{Nmax,mode}=\t"$0"\n"}' >> $report
  end
  cd -

  mv $auxdir/* $outdir

  # OUTPUT:
  more $outdir/$report

  # check for duplicate columns using dupseek
  dupseek -b report -f hn $outdir/*-stats.asc

# end of the '2 arguments?' if 
endif 
